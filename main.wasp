app QuickHost {
  wasp: {
    version: "^0.12.3"
  },
  title: "QuickHost",
  client: {
    rootComponent: import { Layout } from "@src/Layout.jsx",
  },
  db: {
    prisma: {
      clientPreviewFeatures: ["extendedWhereUnique"]
    }
  },
  auth: {
    userEntity: User,
    methods: {
      usernameAndPassword: {}
    },
    onAuthFailedRedirectTo: "/login",
    onAuthSucceededRedirectTo: "/"
  },
}

route LoginRoute { path: "/login", to: LoginPage }
page LoginPage {
  component: import Login from "@src/pages/auth/Login.jsx"
}
route SignupRoute { path: "/signup", to: SignupPage }
page SignupPage {
  component: import Signup from "@src/pages/auth/Signup.jsx"
}

entity User {=psl
    id       Int    @id @default(autoincrement())
    email    String @unique
    password String
    files    File[]
psl=}

entity File {=psl
    id         Int      @id @default(autoincrement())
    name       String
    type       String
    size       Float
    uploadedAt DateTime @default(now())
    user       User     @relation(fields: [userId], references: [id])
    userId     Int
psl=}

action uploadFile {
  fn: import { uploadFile } from "@src/actions.js",
  entities: [File]
}

action deleteFile {
  fn: import { deleteFile } from "@src/actions.js",
  entities: [File]
}

action updateProfile {
  fn: import { updateProfile } from "@src/actions.js",
  entities: [User]
}

query getUserFiles {
  fn: import { getUserFiles } from "@src/queries.js",
  entities: [File]
}

query getFileDetails {
  fn: import { getFileDetails } from "@src/queries.js",
  entities: [File]
}

query getUserDetails {
  fn: import { getUserDetails } from "@src/queries.js",
  entities: [User]
}

route HomeRoute { path: "/", to: HomePage }
page HomePage {
  component: import HomePage from "@src/pages/Home.jsx",
  authRequired: false
}

route DashboardRoute { path: "/dashboard", to: DashboardPage }
page DashboardPage {
  component: import DashboardPage from "@src/pages/Dashboard.jsx",
  authRequired: true
}

route UploadRoute { path: "/upload", to: UploadPage }
page UploadPage {
  component: import UploadPage from "@src/pages/Upload.jsx",
  authRequired: true
}

route FileManagementRoute { path: "/files", to: FileManagementPage }
page FileManagementPage {
  component: import FileManagementPage from "@src/pages/FileManagement.jsx",
  authRequired: true
}

route SettingsRoute { path: "/settings", to: SettingsPage }
page SettingsPage {
  component: import SettingsPage from "@src/pages/Settings.jsx",
  authRequired: true
}